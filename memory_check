#!/bin/bash

usage () {
  echo "Usage: `basename $0` -c 90 -w 60 -e name@email.com (-h for help)" >&2
  echo "  -c   Set Memory percentage value identified as critical!" >&2
  echo "  -w   Set Memory percentage value identified as warning!" >&2
  echo "  -e   Set Email address to send to if memory is critical."  >&2
  exit
}

sendnotice () {
  DATE=$(date +%Y%m%d" "%H:%M)
  echo "Subject: $DATE memory check - critical" > /tmp/mail.txt
  echo "" >> /tmp/mail.txt
  ps -eo pid,comm,pmem --sort -rss | head -11 >> /tmp/mail.txt
  sendmail $email < /tmp/email.txt
#  echo "sending to $email" >&2
}

check_int () {
  if ! [[ "$OPTARG" =~ ^([0-9]|[1-9][0-9])$ ]]; then
    echo "-$opt value should be between 0-99 only!"
    usage
  fi
}

check_email () {
  if [[ "$OPTARG" != [a-zA-Z0-9]*@[a-zA-Z0-9]* ]]; then
    echo "$OPTARG is not a valid email!"
    usage
  fi
}

if [ $# -eq 0 ]; then
  usage
fi

while getopts "c:w:e:h" opt; do
  case $opt in
    c)  crit=$OPTARG; check_int;;
    w)  warn=$OPTARG; check_int;;
    e)  email=$OPTARG; check_email;;
    h)  usage;;
    \?) usage;;
    :)  usage;;
  esac
done

mem=$(free | grep Mem | awk '{print int($3/$2 * 100)}')

if [[ $crit -le $warn ]]; then
  echo "Argument for -c should be higher than -w"
  usage
elif [[ $mem -ge $crit ]]; then
  sendnotice
  exit 2
elif [[ $mem -lt $crit ]] && [[ $mem -gt $warn ]]; then
  exit 1
else
  exit
fi
